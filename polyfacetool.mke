#*--------------------------------------------------------------------------------------+
#
#     $Source: MstnExamples/Elements/Polyfacetool/polyfacetool.mke $
#
#  $Copyright: (c) 2015 Bentley Systems, Incorporated. All rights reserved. $
#
#--------------------------------------------------------------------------------------*/

PolicyFile = MicroStationPolicy.mki
DEFAULT_TARGET_PROCESSOR_ARCHITECTURE=x64
MDLMKI = $(MSMDE)mki/
mdlLibs = $(MSMDE)library/
dirToSearch = $(MDLMKI)
genSrc = $(o)
%include $(MDLMKI)mdl.mki
%include $(MDLMKI)cincapnd.mki

appName         = polyfacetool
sAppName        = polyfacetool

baseDir         = $(_MakeFilePath)
privateInc      = $(baseDir)
langSpec        = $(baseDir)transkit/
mdlLibs         = $(MSMDE)library/
#----------------------------------------------------------------------
# Create needed output directories if they don't exist
#----------------------------------------------------------------------
always:
    ~mkdir $(o)
    ~mkdir $(rscObjects)
    ~mkdir $(mdlapps)

# Search in $(o) for command table resources
dirToSearch = $(o)
%include $(MDLMKI)cincapnd.mki


#----------------------------------------------------------------------
#   The following defines the dependency list for the CODE portion
#   of this application. Included are any CODE libraries or objects
#   from any related applications. Typically these files are linked
#   together into a file with a '.mp' extension. (Mdl Program module)
#
#   NOTE: ALL literal strings which would be contained in a .mc file
#         should be placed in a messageList resource located in the
#         directory pointed to by 'langSpec'. All strings should be
#         loaded from a messageList resource at runtime.
#----------------------------------------------------------------------
appObjects = \
    $(o)$(appName)$(oext) \
    $(o)PolyfaceCreateTool$(oext) \
	$(o)PolyfaceConvertTool$(oext) \
	$(o)findAllReference$(oext) \
	$(o)getData$(oext) \
	$(o)utility$(oext) \
	$(o)sqlliteRW$(oext) \
    
DLM_OBJECT_DEST         = $(o)
DLM_NAME                = $(appName)
DLM_OBJECT_FILES        = $(appObjects)
DLM_NO_DLS              = 1     #  Used DLLEXPORT in .c file instead of using a .dls
DLM_NO_DEF              = 1
DLM_NOENTRY             = 1
DLM_DEST                = $(mdlapps)
LINKER_LIBRARIES        = $(mdlLibs)bentley.lib \
                          $(mdlLibs)BentleyAllocator.lib \
                          $(mdlLibs)mdlbltin.lib \
                          $(mdlLibs)RmgrTools.lib \
                          $(mdlLibs)BentleyGeom.lib \
                          $(mdlLibs)DgnPlatform.lib \
                          $(mdlLibs)dgnview.lib \
						  $(mdlLibs)easySQLite.lib
DLM_NO_SIGN             = 1     # only for test apps; any delivered app MUST be signed.

#----------------------------------------------------------------------
#   The following defines the dependency list for any NON-Translatable
#   resources used by this application. Typically this includes any
#   command table definitions or resource type definitions. This list
#   would also contain the completed CODE portion of the application.
#   Typically these files are lib'd together into a file with a '.mi'
#   extension. (Mdl Intermediate application)
#----------------------------------------------------------------------
appRscs = \
    $(o)$(sAppName)cmd.rsc

#--------------------------------------------
#       Create command table and header file
#--------------------------------------------
$(o)$(sAppName)cmd.h                : $(baseDir)$(sAppName)cmd.r

$(rscObjects)$(sAppName)cmd.rsc     : $(baseDir)$(sAppName)cmd.r

#----------------------------------------------------------------------
#       The following section builds any necessary CODE modules for the
#       application.
#----------------------------------------------------------------------
$(o)$(appName)$(oext)              : $(baseDir)$(appName).cpp          $(o)$(sAppName)cmd.h $(baseDir)$(sAppName)ids.h $(baseDir)$(appName).h

$(o)PolyfaceCreateTool$(oext)      : $(baseDir)PolyfaceCreateTool.cpp     $(o)$(sAppName)cmd.h $(baseDir)$(sAppName)ids.h $(baseDir)$(appName).h

$(o)PolyfaceConvertTool$(oext)     : $(baseDir)PolyfaceConvertTool.cpp     $(o)$(sAppName)cmd.h $(baseDir)$(sAppName)ids.h $(baseDir)$(appName).h

$(o)findAllReference$(oext)     : $(baseDir)findAllReference.cpp     $(o)$(sAppName)cmd.h $(baseDir)$(sAppName)ids.h $(baseDir)$(appName).h

$(o)getData$(oext)     : $(baseDir)getData.cpp     $(o)$(sAppName)cmd.h $(baseDir)$(sAppName)ids.h $(baseDir)$(appName).h

$(o)utility$(oext)     : $(baseDir)utility.cpp

$(o)sqlliteRW$(oext)     : $(baseDir)sqlliteRW.cpp     $(o)$(sAppName)cmd.h $(baseDir)$(sAppName)ids.h $(baseDir)

#----------------------------------------------------------------------
#       The following section generates the MDL Intermediate module. This
#       module contains any non-translatable resource modules.
#
#       NOTE: This module MUST be placed in the directory pointed to by
#         the 'o' macro defined in MDL.MKI. This module is
#         shipped as part of the Foreign Language Translation Kit.
#----------------------------------------------------------------------
$(o)$(appName).mi    : $(appRscs)
        $(msg)
        > $(o)make.opt
        -o$@
        $(appRscs)
        <
        $(RLibCmd) @$(o)make.opt
        ~time

%include $(MDLMKI)dlmlink.mki

#----------------------------------------------------------------------
#   The following defines the dependency list for translatable
#   resources used by this application. Typically this includes any
#   dialog definitions or message list resources.
#   Typically these files are lib'd together into a file with a '.ma'
#   extension. (Mdl Application)
#
#   NOTE: Dialog box resources should NOT contain literal strings for
#         any type of label. Instead, ALL literal strings should be
#         replaced by a definition found in an include file located
#         in a directory pointed to by 'langSpec'.
#----------------------------------------------------------------------
maRscs = \
    $(o)$(appName).mi \
    $(rscObjects)$(sAppName)msg.rsc

#----------------------------------------------------------------------
#       The following section builds any translatable resource modules for
#   the application.
#----------------------------------------------------------------------
$(rscObjects)$(sAppName)msg.rsc     : $(basedir)transkit\$(sAppName)msg.r \
                                      $(basedir)$(appName).h

#----------------------------------------------------------------------
# Link the MA
#----------------------------------------------------------------------
MA_NAME         = $(appName)
MA_DEST         = $(DLM_DEST)
MA_RSC_FILES    = $(maRscs)
MA_EXT          = .ma

cmdFile = $(o)$(MA_NAME)link.cmd

#--------------------------------------------------------------------------------------
#  Link and sign the MA
#--------------------------------------------------------------------------------------
"$(MA_DEST)$(MA_NAME)$(MA_EXT)"     : $(MA_RSC_FILES)
    $(msg)
    > $(cmdFile)
    -o$@
    $(MA_SPECIAL_LINKOPT)
    $(MA_RSC_FILES)
    <
    $(RLibCmd) @$(cmdFile)
    ~time
	
